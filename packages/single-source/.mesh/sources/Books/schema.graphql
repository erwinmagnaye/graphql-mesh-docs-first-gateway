schema {
  query: Query
}

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "Books", endpoint: "http://localhost:3002/") {
  "\n>**Method**: `GET`\n>**Base URL**: `http://localhost:3002/`\n>**Path**: `/books`\n\n"
  AppController_listBooks: [Book] @httpOperation(path: "/books", operationSpecificHeaders: "{\"accept\":\"application/json\"}", httpMethod: GET)
  "\n>**Method**: `GET`\n>**Base URL**: `http://localhost:3002/`\n>**Path**: `/categories`\n\n"
  AppController_listBookCategories: [Category] @httpOperation(path: "/categories", operationSpecificHeaders: "{\"accept\":\"application/json\"}", httpMethod: GET)
  "\n>**Method**: `GET`\n>**Base URL**: `http://localhost:3002/`\n>**Path**: `/books/{args.id}`\n\n"
  AppController_findOne(id: String!): Book @httpOperation(path: "/books/{args.id}", operationSpecificHeaders: "{\"accept\":\"application/json\"}", httpMethod: GET)
}

type Book {
  id: String!
  authorId: String!
  categoryId: String!
  title: String!
  hoistedProductCategory: ProductCategoryEntity!
  hoistedTitle: TitleEntity!
}

type Entity {
  productCategory: ProductCategory!
  title: Title!
  otherProp: String!
}

type ProductCategory {
  otherProp: String!
}

type ProductCategoryEntity {
  displayString: String!
  otherProp: String!
}

type Title {
  otherProp: String!
}

type TitleEntity {
  displayString: String!
  otherProp: String!
}

type Category {
  id: String!
  name: String!
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}